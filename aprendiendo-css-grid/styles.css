body {
    text-align: center;
}




/* EJERCICIO COMPLETO CON AREAS */
#webSite-areas *{
    margin: 0px;
    padding: 0px;
}
#webSite-areas {

    display: grid;
    grid-template-columns: repeat(5,1fr);
    /* Se agregan diferentes tamanios a nivel fila */
    grid-template-rows: 200px  70px  1fr  70px; 


    /* Se muestra el uso de grid areas, que de forma textual se ingresa
    los nombres de los elementos, de acuerdo a las respectivas columnas a utilizar.
    De esta manera, solo se asocian los nombres y listo.
    
    */
    grid-template-areas: 
    "lateral cabecera cabecera cabecera cabecera"
    "lateral menu menu menu menu"
    "lateral contenido contenido contenido contenido"
    "lateral pie pie pie pie";

    width: 75%;
    height: 1000px;
    margin: 0px auto;
    border: 1px solid #ccc;
}

#webSite-areas #cabecera{
    /* Se ajustan el fit a nivel columna para determinar los espacios a utilizar
    RECORDAR que se tienen 
    5 columnas de 1fr
    4 filas de 4 tamanios diferentes
    */
    background-color: blue;
    color: white;


    /* como centrar contenido TITULO DE LA WEB horizontal y verticalmente usando GRID
    de lo contrario seria >>

    display: flex
    justify-content:center,
    align-items:center
    
    */
    display: grid;
    place-items: center;

    /* Nombre del grid area a asociar */
    grid-area: cabecera;


}

#webSite-areas #menu{
    background-color: lightblue;
    color: black;

        /* Nombre del grid area a asociar */
    grid-area: menu;
}

#webSite-areas #menu ul{
    /* Se muestra, que dentro de un elemento GRID se puede establecer nuevamente GRID
    Como en este caso, el UL se organiza como grid, con 9 columnas
    */
    display: grid;
    grid-template-columns: repeat(9,1fr);
    list-style: none;
    margin: 0px;
    padding: 0px;

    /* Para centrar el menu, ya que es creado con un height de 70px > webSites row */
    line-height: 70px;
}

#webSite-areas #contenido{
    display: grid;
    grid-template-columns: repeat(3,1fr);
    gap: 25px;
    padding: 20px;
    background-color: #eee;


        /* Nombre del grid area a asociar */
    grid-area: contenido;
}

#webSite-areas #contenido  article{
    background-color: #ccc;
    border: 1px solid #555;
}

#webSite-areas #lateral {
    background-color: orange;
    color: white;

        /* Nombre del grid area a asociar */
    grid-area: lateral;
}

#webSite-areas #pie-pagina{
    background-color: black;
    color: white;

        /* Nombre del grid area a asociar */
    grid-area: pie;
}













/* EJERCICIO COMPLETO */
#webSite *{
    margin: 0px;
    padding: 0px;
}
#webSite {

    display: grid;
    grid-template-columns: repeat(5,1fr);
    /* Se agregan diferentes tamanios a nivel fila */
    grid-template-rows: 200px  70px  1fr  70px; 


    width: 75%;
    height: 1000px;
    margin: 0px auto;
    border: 1px solid #ccc;
}

#webSite #cabecera{
    /* Se ajustan el fit a nivel columna para determinar los espacios a utilizar
    RECORDAR que se tienen 
    5 columnas de 1fr
    4 filas de 4 tamanios diferentes
    */
    grid-column: 1 / 6;
    background-color: blue;
    color: white;


    /* como centrar contenido TITULO DE LA WEB horizontal y verticalmente usando GRID
    de lo contrario seria >>

    display: flex
    justify-content:center,
    align-items:center
    
    */
    display: grid;
    place-items: center;


}

#webSite #menu{
    grid-column: 1 / 6;
    background-color: lightblue;
    color: black;
}

#webSite #menu ul{
    /* Se muestra, que dentro de un elemento GRID se puede establecer nuevamente GRID
    Como en este caso, el UL se organiza como grid, con 9 columnas
    */
    display: grid;
    grid-template-columns: repeat(9,1fr);
    list-style: none;
    margin: 0px;
    padding: 0px;

    /* Para centrar el menu, ya que es creado con un height de 70px > webSites row */
    line-height: 70px;
}

#webSite #contenido{
    grid-column: 1 / 5;
    display: grid;
    grid-template-columns: repeat(3,1fr);
    gap: 25px;
    padding: 20px;
    background-color: #eee;
}

#webSite #contenido  article{
    background-color: #ccc;
    border: 1px solid #555;
}

#webSite #lateral {
    grid-column: 5 / 6;
    background-color: orange;
    color: white;
}

#webSite #pie-pagina{
    grid-column: 1 / 6;
    background-color: black;
    color: white;
}






















/* EJEMPLOS */

.layout {

    width: 80%;
    /* min-height: 400px; */
    height: 600px;
    margin: 0px auto;

    border: 3px solid orangered;

    /* Definir contenedor GRID */
    display: grid;


    /* Establece el tamaño de la columna, en este caso con repeat para no poner 2 veces fr - FRACCIONES- */
    grid-template-columns: repeat(3, 1fr);

    /* Para establecer los tamaños de los Rows, admite %, Fracciones (fr), pixeles*/
    grid-template-rows: 0.5fr 3fr 15% 1fr;


    /* Tamaño del grid, espaciado */
    gap: 10px;

    padding: 10px;

}

.layout .caja {
    font-size: 20px;
    font-weight: bold;
    color: white;
    padding: 20px;
    border: 4px solid #222;
    /* margin: 10px; */
    background-color: gray;
}

.layout .red {
    background-color: red;

    /* De esta menera se puede expandir las columas, estableciendo que parte de la columa 1, a la 4 > con base al GRID del navegador */
    grid-column-start: 1;
    grid-column-end: 4;

}

.layout .blue {
    background-color: blue;
}

.layout .green {
    background-color: green;

    grid-row-start: 2;
    grid-row-end: 6;
}

.layout .blue {
    background-color: blue;
    grid-column: 2 / 4;

}

.layout .pink {
    background-color: pink;

    grid-column: 2 / 3;

    /* Para expandir a nivel fila, es decir a lo largo  */
    grid-row: 3/5;
}

.layout .orange {
    background-color: orange;
    grid-row: 3/5;

}

.layout .lightblue {
    background-color: lightblue;

    /* grid-column-start: 1;
    grid-column-end: 3; */

    /* Esta es otra forma de expandir las columnas, ingresando que parte de la columa 1 / a la 4 , con base al Grid del Navegador*/
    grid-column: 2 / 4;
}